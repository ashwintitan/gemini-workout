{"ast":null,"code":"import _objectSpread from\"C:/Users/ramya/AppData/Local/npm-cache/_npx/cd53aabf71f3f793/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import'./index.css';// --- CONFIGURATION CONSTANTS ---\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MAX_ROUNDS=15;const MAX_TIME=120;const WORK_INCREMENT=15;const REST_INCREMENT=5;const PREP_TIME=5;// --- WORKOUT STATE ENUM ---\nconst WORKOUT_STATES={SETUP:'SETUP',PREP:'PREP',WORK:'WORK',REST:'REST',COMPLETE:'COMPLETE'};// --- HELPER FUNCTIONS ---\nconst formatTime=seconds=>{const minutes=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(String(minutes).padStart(2,'0'),\":\").concat(String(secs).padStart(2,'0'));};const playHighPitchedNoise=()=>{try{const audio=new Audio('/chime.mp3');audio.volume=0.8;audio.play().catch(e=>console.error(\"Audio playback error:\",e));}catch(e){console.error(\"Browser audio API issue:\",e);}};// --- HORIZONTAL SCROLL INPUT COMPONENT ---\nconst HorizontalScrollInput=/*#__PURE__*/React.memo(_ref=>{let{label,value,max,increment,min,onChange}=_ref;const wheelRef=useRef(null);const itemWidth=80;// Must match CSS -- this is the size of each number block\nconst maxIndex=Math.floor((max-min)/increment);// Generate all possible values for the wheel\nconst items=Array.from({length:maxIndex+1},(_,i)=>min+i*increment);// Calculate the index corresponding to the current value\nconst currentIndex=Math.floor((value-min)/increment);// Effect to set the initial scroll position correctly on load/value change\nuseEffect(()=>{if(wheelRef.current){// Set scrollLeft to center the current value. We offset by half the viewport width \n// to make sure the centered item is selected.\nconst scrollCenter=currentIndex*itemWidth-wheelRef.current.offsetWidth/2+itemWidth/2;wheelRef.current.scrollLeft=scrollCenter;}},[currentIndex,items.length,min,increment]);// Debounce function to prevent excessive state updates during scrolling\nconst debounceRef=useRef(null);const handleScroll=()=>{if(debounceRef.current)clearTimeout(debounceRef.current);debounceRef.current=setTimeout(()=>{const element=wheelRef.current;if(!element)return;// Calculate which item is closest to the center of the viewport\n// Total scroll + half viewport - half item width\nconst scrollCenter=element.scrollLeft+element.offsetWidth/2;const nearestIndex=Math.round(scrollCenter/itemWidth)-1;// -1 to account for padding/alignment\nlet newIndex=Math.max(0,Math.min(maxIndex,nearestIndex));// Calculate the actual value\nconst newValue=min+newIndex*increment;if(newValue!==value){onChange(newValue);}},100);// 100ms debounce\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"input-label\",children:label}),/*#__PURE__*/_jsx(\"div\",{className:\"scroll-container\",children:/*#__PURE__*/_jsxs(\"div\",{ref:wheelRef,className:\"scroll-wheel-horizontal\",onScroll:handleScroll,children:[/*#__PURE__*/_jsx(\"div\",{className:\"scroll-padding-start\",style:{width:\"calc(50% - \".concat(itemWidth/2,\"px)\")}}),items.map((item,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"scroll-item-h \".concat(item===value?'active':''),style:{width:itemWidth},children:item},index)),/*#__PURE__*/_jsx(\"div\",{className:\"scroll-padding-end\",style:{width:\"calc(50% - \".concat(itemWidth/2,\"px)\")}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"value-display\",children:value})]});});// --- MAIN APP COMPONENT ---\nfunction App(){const[settings,setSettings]=useState({rounds:5,workTime:60,restTime:30});const[timerState,setTimerState]=useState(WORKOUT_STATES.SETUP);const[timeRemaining,setTimeRemaining]=useState(0);const[currentRound,setCurrentRound]=useState(1);const intervalRef=useRef(null);// Logic to handle state transitions\nconst handleNextState=useCallback(()=>{if(timerState===WORKOUT_STATES.PREP){setTimerState(WORKOUT_STATES.WORK);setTimeRemaining(settings.workTime);}else if(timerState===WORKOUT_STATES.WORK){if(currentRound<settings.rounds){setTimerState(WORKOUT_STATES.REST);setTimeRemaining(settings.restTime);}else{setTimerState(WORKOUT_STATES.COMPLETE);}}else if(timerState===WORKOUT_STATES.REST){const nextRound=currentRound+1;setCurrentRound(nextRound);if(nextRound<=settings.rounds){setTimerState(WORKOUT_STATES.WORK);setTimeRemaining(settings.workTime);}else{setTimerState(WORKOUT_STATES.COMPLETE);}}},[timerState,settings,currentRound]);// The main timer loop\nuseEffect(()=>{if(timerState===WORKOUT_STATES.SETUP||timerState===WORKOUT_STATES.COMPLETE){return()=>clearInterval(intervalRef.current);}intervalRef.current=setInterval(()=>{setTimeRemaining(prevTime=>{const newTime=prevTime-1;if(newTime>=0&&newTime<=3){playHighPitchedNoise();}if(newTime<0){clearInterval(intervalRef.current);handleNextState();return 0;}return newTime;});},1000);return()=>clearInterval(intervalRef.current);},[timerState,settings,currentRound,handleNextState]);const startWorkout=()=>{clearInterval(intervalRef.current);if(settings.rounds>0&&settings.workTime>0){setTimerState(WORKOUT_STATES.PREP);setTimeRemaining(PREP_TIME);setCurrentRound(1);}};const resetWorkout=()=>{clearInterval(intervalRef.current);setTimerState(WORKOUT_STATES.SETUP);setTimeRemaining(0);setCurrentRound(1);};const createSettingsSetter=useCallback(key=>{return newVal=>{if(typeof newVal==='function'){// This path is no longer needed with ScrollInput but kept as safeguard\nsetSettings(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:newVal(prev[key])}));}else{// The ScrollInput directly passes the final value, so we use this path\nsetSettings(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:newVal}));}};},[]);// --- RENDER LOGIC ---\nif(timerState===WORKOUT_STATES.SETUP){return/*#__PURE__*/_jsxs(\"div\",{className:\"app setup-view\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Interval Timer Setup\"}),/*#__PURE__*/_jsx(HorizontalScrollInput,{label:\"Rounds (Scroll Left/Right)\",value:settings.rounds,min:1,max:MAX_ROUNDS,increment:1,onChange:createSettingsSetter('rounds')}),/*#__PURE__*/_jsx(HorizontalScrollInput,{label:\"Work Time (Intervals of \".concat(WORK_INCREMENT,\"s)\"),value:settings.workTime,min:WORK_INCREMENT,max:MAX_TIME,increment:WORK_INCREMENT,onChange:createSettingsSetter('workTime')}),/*#__PURE__*/_jsx(HorizontalScrollInput,{label:\"Rest Time (Intervals of \".concat(REST_INCREMENT,\"s)\"),value:settings.restTime,min:REST_INCREMENT,max:MAX_TIME,increment:REST_INCREMENT,onChange:createSettingsSetter('restTime')}),/*#__PURE__*/_jsx(\"button\",{onClick:startWorkout,className:\"btn-start\",disabled:settings.rounds<1||settings.workTime<WORK_INCREMENT,children:\"Start Workout\"})]});}// Active Timer View (Same as before)\nconst phaseLabel={[WORKOUT_STATES.PREP]:'GET READY',[WORKOUT_STATES.WORK]:'WORK',[WORKOUT_STATES.REST]:'REST',[WORKOUT_STATES.COMPLETE]:'COMPLETE'}[timerState];const isComplete=timerState===WORKOUT_STATES.COMPLETE;const isPrep=timerState===WORKOUT_STATES.PREP;const isWorking=timerState===WORKOUT_STATES.WORK;return/*#__PURE__*/_jsxs(\"div\",{className:\"app timer-view \".concat(isWorking?'work-phase':'',\" \").concat(timerState===WORKOUT_STATES.REST?'rest-phase':'',\" \").concat(isComplete?'complete-phase':'',\" \").concat(isPrep?'prep-phase':''),children:[!isComplete&&/*#__PURE__*/_jsx(\"div\",{className:\"round-tracker\",children:isPrep?'PREP':\"ROUND \".concat(currentRound,\" OF \").concat(settings.rounds)}),/*#__PURE__*/_jsx(\"div\",{className:\"phase-label\",children:phaseLabel}),/*#__PURE__*/_jsx(\"div\",{className:\"main-timer\",children:isPrep?timeRemaining:formatTime(timeRemaining)}),isComplete&&/*#__PURE__*/_jsx(\"div\",{className:\"complete-message\",children:\"WORKOUT COMPLETE! \\uD83D\\uDCAA\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resetWorkout,className:\"btn-reset\",children:isComplete?'New Workout':'Stop / Reset'})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsx","_jsx","jsxs","_jsxs","MAX_ROUNDS","MAX_TIME","WORK_INCREMENT","REST_INCREMENT","PREP_TIME","WORKOUT_STATES","SETUP","PREP","WORK","REST","COMPLETE","formatTime","seconds","minutes","Math","floor","secs","concat","String","padStart","playHighPitchedNoise","audio","Audio","volume","play","catch","e","console","error","HorizontalScrollInput","memo","_ref","label","value","max","increment","min","onChange","wheelRef","itemWidth","maxIndex","items","Array","from","length","_","i","currentIndex","current","scrollCenter","offsetWidth","scrollLeft","debounceRef","handleScroll","clearTimeout","setTimeout","element","nearestIndex","round","newIndex","newValue","className","children","ref","onScroll","style","width","map","item","index","App","settings","setSettings","rounds","workTime","restTime","timerState","setTimerState","timeRemaining","setTimeRemaining","currentRound","setCurrentRound","intervalRef","handleNextState","nextRound","clearInterval","setInterval","prevTime","newTime","startWorkout","resetWorkout","createSettingsSetter","key","newVal","prev","_objectSpread","onClick","disabled","phaseLabel","isComplete","isPrep","isWorking"],"sources":["C:/Ashwin/Apps/gemini-workout/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport './index.css';\r\n\r\n// --- CONFIGURATION CONSTANTS ---\r\nconst MAX_ROUNDS = 15;\r\nconst MAX_TIME = 120;\r\nconst WORK_INCREMENT = 15;\r\nconst REST_INCREMENT = 5;\r\nconst PREP_TIME = 5;\r\n\r\n// --- WORKOUT STATE ENUM ---\r\nconst WORKOUT_STATES = {\r\n    SETUP: 'SETUP',\r\n    PREP: 'PREP',\r\n    WORK: 'WORK',\r\n    REST: 'REST',\r\n    COMPLETE: 'COMPLETE'\r\n};\r\n\r\n// --- HELPER FUNCTIONS ---\r\n\r\nconst formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\r\n};\r\n\r\nconst playHighPitchedNoise = () => {\r\n    try {\r\n        const audio = new Audio('/chime.mp3'); \r\n        audio.volume = 0.8;\r\n        audio.play().catch(e => console.error(\"Audio playback error:\", e));\r\n    } catch (e) {\r\n        console.error(\"Browser audio API issue:\", e);\r\n    }\r\n};\r\n\r\n// --- HORIZONTAL SCROLL INPUT COMPONENT ---\r\nconst HorizontalScrollInput = React.memo(({ label, value, max, increment, min, onChange }) => {\r\n    const wheelRef = useRef(null);\r\n    const itemWidth = 80; // Must match CSS -- this is the size of each number block\r\n    const maxIndex = Math.floor((max - min) / increment);\r\n    \r\n    // Generate all possible values for the wheel\r\n    const items = Array.from({ length: maxIndex + 1 }, (_, i) => min + i * increment);\r\n    \r\n    // Calculate the index corresponding to the current value\r\n    const currentIndex = Math.floor((value - min) / increment);\r\n\r\n    // Effect to set the initial scroll position correctly on load/value change\r\n    useEffect(() => {\r\n        if (wheelRef.current) {\r\n            // Set scrollLeft to center the current value. We offset by half the viewport width \r\n            // to make sure the centered item is selected.\r\n            const scrollCenter = (currentIndex * itemWidth) - (wheelRef.current.offsetWidth / 2) + (itemWidth / 2);\r\n            wheelRef.current.scrollLeft = scrollCenter;\r\n        }\r\n    }, [currentIndex, items.length, min, increment]);\r\n\r\n    // Debounce function to prevent excessive state updates during scrolling\r\n    const debounceRef = useRef(null);\r\n    const handleScroll = () => {\r\n        if (debounceRef.current) clearTimeout(debounceRef.current);\r\n\r\n        debounceRef.current = setTimeout(() => {\r\n            const element = wheelRef.current;\r\n            if (!element) return;\r\n\r\n            // Calculate which item is closest to the center of the viewport\r\n            // Total scroll + half viewport - half item width\r\n            const scrollCenter = element.scrollLeft + (element.offsetWidth / 2);\r\n            const nearestIndex = Math.round(scrollCenter / itemWidth) - 1; // -1 to account for padding/alignment\r\n\r\n            let newIndex = Math.max(0, Math.min(maxIndex, nearestIndex));\r\n            \r\n            // Calculate the actual value\r\n            const newValue = min + newIndex * increment;\r\n\r\n            if (newValue !== value) {\r\n                onChange(newValue);\r\n            }\r\n        }, 100); // 100ms debounce\r\n    };\r\n\r\n    return (\r\n        <div className=\"input-group\">\r\n            <label className=\"input-label\">{label}</label>\r\n            <div className=\"scroll-container\">\r\n                <div \r\n                    ref={wheelRef} \r\n                    className=\"scroll-wheel-horizontal\"\r\n                    onScroll={handleScroll}\r\n                >\r\n                    {/* Add invisible padding items for centering the first and last values */}\r\n                    <div className=\"scroll-padding-start\" style={{ width: `calc(50% - ${itemWidth / 2}px)` }}></div>\r\n                    \r\n                    {items.map((item, index) => (\r\n                        <div \r\n                            key={index} \r\n                            className={`scroll-item-h ${item === value ? 'active' : ''}`}\r\n                            style={{ width: itemWidth }}\r\n                        >\r\n                            {item}\r\n                        </div>\r\n                    ))}\r\n\r\n                    <div className=\"scroll-padding-end\" style={{ width: `calc(50% - ${itemWidth / 2}px)` }}></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"value-display\">{value}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n// --- MAIN APP COMPONENT ---\r\n\r\nfunction App() {\r\n    const [settings, setSettings] = useState({ rounds: 5, workTime: 60, restTime: 30 });\r\n    const [timerState, setTimerState] = useState(WORKOUT_STATES.SETUP);\r\n    const [timeRemaining, setTimeRemaining] = useState(0);\r\n    const [currentRound, setCurrentRound] = useState(1);\r\n    const intervalRef = useRef(null);\r\n\r\n    // Logic to handle state transitions\r\n    const handleNextState = useCallback(() => {\r\n        if (timerState === WORKOUT_STATES.PREP) {\r\n            setTimerState(WORKOUT_STATES.WORK);\r\n            setTimeRemaining(settings.workTime);\r\n\r\n        } else if (timerState === WORKOUT_STATES.WORK) {\r\n            if (currentRound < settings.rounds) {\r\n                setTimerState(WORKOUT_STATES.REST);\r\n                setTimeRemaining(settings.restTime);\r\n            } else {\r\n                setTimerState(WORKOUT_STATES.COMPLETE);\r\n            }\r\n\r\n        } else if (timerState === WORKOUT_STATES.REST) {\r\n            const nextRound = currentRound + 1;\r\n            setCurrentRound(nextRound);\r\n\r\n            if (nextRound <= settings.rounds) {\r\n                setTimerState(WORKOUT_STATES.WORK);\r\n                setTimeRemaining(settings.workTime);\r\n            } else {\r\n                setTimerState(WORKOUT_STATES.COMPLETE);\r\n            }\r\n        }\r\n    }, [timerState, settings, currentRound]);\r\n\r\n    // The main timer loop\r\n    useEffect(() => {\r\n        if (timerState === WORKOUT_STATES.SETUP || timerState === WORKOUT_STATES.COMPLETE) {\r\n            return () => clearInterval(intervalRef.current);\r\n        }\r\n\r\n        intervalRef.current = setInterval(() => {\r\n            setTimeRemaining(prevTime => {\r\n                const newTime = prevTime - 1;\r\n\r\n                if (newTime >= 0 && newTime <= 3) {\r\n                    playHighPitchedNoise();\r\n                }\r\n\r\n                if (newTime < 0) {\r\n                    clearInterval(intervalRef.current);\r\n                    handleNextState();\r\n                    return 0;\r\n                }\r\n\r\n                return newTime;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [timerState, settings, currentRound, handleNextState]);\r\n\r\n    const startWorkout = () => {\r\n        clearInterval(intervalRef.current);\r\n        if (settings.rounds > 0 && settings.workTime > 0) {\r\n            setTimerState(WORKOUT_STATES.PREP);\r\n            setTimeRemaining(PREP_TIME);\r\n            setCurrentRound(1);\r\n        }\r\n    };\r\n\r\n    const resetWorkout = () => {\r\n        clearInterval(intervalRef.current);\r\n        setTimerState(WORKOUT_STATES.SETUP);\r\n        setTimeRemaining(0);\r\n        setCurrentRound(1);\r\n    };\r\n    \r\n    const createSettingsSetter = useCallback((key) => {\r\n        return (newVal) => {\r\n            if (typeof newVal === 'function') {\r\n                // This path is no longer needed with ScrollInput but kept as safeguard\r\n                setSettings(prev => ({...prev, [key]: newVal(prev[key])}));\r\n            } else {\r\n                // The ScrollInput directly passes the final value, so we use this path\r\n                setSettings(prev => ({...prev, [key]: newVal}));\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // --- RENDER LOGIC ---\r\n    if (timerState === WORKOUT_STATES.SETUP) {\r\n        return (\r\n            <div className=\"app setup-view\">\r\n                <h1 className=\"title\">Interval Timer Setup</h1>\r\n                \r\n                <HorizontalScrollInput \r\n                    label=\"Rounds (Scroll Left/Right)\"\r\n                    value={settings.rounds}\r\n                    min={1} \r\n                    max={MAX_ROUNDS}\r\n                    increment={1}\r\n                    onChange={createSettingsSetter('rounds')}\r\n                />\r\n                <HorizontalScrollInput \r\n                    label={`Work Time (Intervals of ${WORK_INCREMENT}s)`}\r\n                    value={settings.workTime}\r\n                    min={WORK_INCREMENT} \r\n                    max={MAX_TIME}\r\n                    increment={WORK_INCREMENT}\r\n                    onChange={createSettingsSetter('workTime')}\r\n                />\r\n                <HorizontalScrollInput \r\n                    label={`Rest Time (Intervals of ${REST_INCREMENT}s)`}\r\n                    value={settings.restTime}\r\n                    min={REST_INCREMENT} \r\n                    max={MAX_TIME}\r\n                    increment={REST_INCREMENT}\r\n                    onChange={createSettingsSetter('restTime')}\r\n                />\r\n                \r\n                <button \r\n                    onClick={startWorkout} \r\n                    className=\"btn-start\"\r\n                    disabled={settings.rounds < 1 || settings.workTime < WORK_INCREMENT}\r\n                >\r\n                    Start Workout\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Active Timer View (Same as before)\r\n    const phaseLabel = {\r\n        [WORKOUT_STATES.PREP]: 'GET READY',\r\n        [WORKOUT_STATES.WORK]: 'WORK',\r\n        [WORKOUT_STATES.REST]: 'REST',\r\n        [WORKOUT_STATES.COMPLETE]: 'COMPLETE'\r\n    }[timerState];\r\n\r\n    const isComplete = timerState === WORKOUT_STATES.COMPLETE;\r\n    const isPrep = timerState === WORKOUT_STATES.PREP;\r\n    const isWorking = timerState === WORKOUT_STATES.WORK;\r\n\r\n    return (\r\n        <div className={`app timer-view ${isWorking ? 'work-phase' : ''} ${timerState === WORKOUT_STATES.REST ? 'rest-phase' : ''} ${isComplete ? 'complete-phase' : ''} ${isPrep ? 'prep-phase' : ''}`}>\r\n            \r\n            {!isComplete && (\r\n                <div className=\"round-tracker\">\r\n                    {isPrep ? 'PREP' : `ROUND ${currentRound} OF ${settings.rounds}`}\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"phase-label\">{phaseLabel}</div>\r\n\r\n            <div className=\"main-timer\">\r\n                {isPrep ? timeRemaining : formatTime(timeRemaining)}\r\n            </div>\r\n            \r\n            {isComplete && (\r\n                <div className=\"complete-message\">\r\n                    WORKOUT COMPLETE! 💪\r\n                </div>\r\n            )}\r\n\r\n            <button onClick={resetWorkout} className=\"btn-reset\">\r\n                {isComplete ? 'New Workout' : 'Stop / Reset'}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}