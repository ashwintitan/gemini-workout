{"ast":null,"code":"import _objectSpread from\"C:/Users/ramya/AppData/Local/npm-cache/_npx/cd53aabf71f3f793/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import'./index.css';// --- CONFIGURATION CONSTANTS ---\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MAX_ROUNDS=15;const MAX_TIME=120;const WORK_INCREMENT=15;const REST_INCREMENT=5;const PREP_TIME=5;const HOLD_INTERVAL_MS=100;// Time between repeating increments (fast)\n// --- WORKOUT STATE ENUM ---\nconst WORKOUT_STATES={SETUP:'SETUP',PREP:'PREP',WORK:'WORK',REST:'REST',COMPLETE:'COMPLETE'};// --- HELPER FUNCTIONS ---\nconst formatTime=seconds=>{const minutes=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(String(minutes).padStart(2,'0'),\":\").concat(String(secs).padStart(2,'0'));};const playHighPitchedNoise=()=>{try{const audio=new Audio('/chime.mp3');audio.volume=0.8;audio.play().catch(e=>console.error(\"Audio playback error:\",e));}catch(e){console.error(\"Browser audio API issue:\",e);}};// --- FAST INPUT COMPONENT (Press-and-Hold - Stable Version) ---\nconst FastInput=/*#__PURE__*/React.memo(_ref=>{let{label,value,max,increment,min,onChange}=_ref;const intervalRef=useRef(null);const changeValue=useCallback((direction,currentValue)=>{let newValue;if(direction==='up'){newValue=Math.min(currentValue+increment,max);}else{newValue=Math.max(currentValue-increment,min);}return newValue;},[increment,max,min]);const applyChange=useCallback(direction=>{onChange(prevValue=>{return changeValue(direction,prevValue);});},[onChange,changeValue]);const handleMouseDown=direction=>{if(intervalRef.current){clearInterval(intervalRef.current);intervalRef.current=null;}// 1. Apply the change once on the initial click\napplyChange(direction);// Check if we are stuck at a boundary after the first click\nconst nextValue=changeValue(direction,value);if(nextValue===value){return;}// 2. Start repeating interval\nintervalRef.current=setInterval(()=>{applyChange(direction);},HOLD_INTERVAL_MS);};const handleMouseUp=()=>{if(intervalRef.current){clearInterval(intervalRef.current);intervalRef.current=null;}};useEffect(()=>{return()=>{if(intervalRef.current){clearInterval(intervalRef.current);}};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"input-label\",children:label}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onMouseDown:()=>handleMouseDown('down'),onMouseUp:handleMouseUp,onMouseLeave:handleMouseUp,onTouchStart:()=>handleMouseDown('down'),onTouchEnd:handleMouseUp,className:\"control-btn minus\",disabled:value===min,children:\"-\"}),/*#__PURE__*/_jsx(\"span\",{className:\"input-value\",children:value}),/*#__PURE__*/_jsx(\"button\",{onMouseDown:()=>handleMouseDown('up'),onMouseUp:handleMouseUp,onMouseLeave:handleMouseUp,onTouchStart:()=>handleMouseDown('up'),onTouchEnd:handleMouseUp,className:\"control-btn plus\",disabled:value===max,children:\"+\"})]})]});});// --- MAIN APP COMPONENT ---\nfunction App(){const[settings,setSettings]=useState({rounds:5,workTime:60,restTime:30});const[timerState,setTimerState]=useState(WORKOUT_STATES.SETUP);const[timeRemaining,setTimeRemaining]=useState(0);const[currentRound,setCurrentRound]=useState(1);const intervalRef=useRef(null);// Logic to handle state transitions\nconst handleNextState=useCallback(()=>{if(timerState===WORKOUT_STATES.PREP){setTimerState(WORKOUT_STATES.WORK);setTimeRemaining(settings.workTime);}else if(timerState===WORKOUT_STATES.WORK){if(currentRound<settings.rounds){setTimerState(WORKOUT_STATES.REST);setTimeRemaining(settings.restTime);}else{setTimerState(WORKOUT_STATES.COMPLETE);}}else if(timerState===WORKOUT_STATES.REST){const nextRound=currentRound+1;setCurrentRound(nextRound);if(nextRound<=settings.rounds){setTimerState(WORKOUT_STATES.WORK);setTimeRemaining(settings.workTime);}else{setTimerState(WORKOUT_STATES.COMPLETE);}}},[timerState,settings,currentRound]);// The main timer loop\nuseEffect(()=>{if(timerState===WORKOUT_STATES.SETUP||timerState===WORKOUT_STATES.COMPLETE){return()=>clearInterval(intervalRef.current);}intervalRef.current=setInterval(()=>{setTimeRemaining(prevTime=>{const newTime=prevTime-1;if(newTime>=0&&newTime<=3){playHighPitchedNoise();}if(newTime<0){clearInterval(intervalRef.current);handleNextState();return 0;}return newTime;});},1000);return()=>clearInterval(intervalRef.current);},[timerState,settings,currentRound,handleNextState]);const startWorkout=()=>{clearInterval(intervalRef.current);if(settings.rounds>0&&settings.workTime>0){setTimerState(WORKOUT_STATES.PREP);setTimeRemaining(PREP_TIME);setCurrentRound(1);}};const resetWorkout=()=>{clearInterval(intervalRef.current);setTimerState(WORKOUT_STATES.SETUP);setTimeRemaining(0);setCurrentRound(1);};const createSettingsSetter=useCallback(key=>{return newVal=>{if(typeof newVal==='function'){setSettings(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:newVal(prev[key])}));}else{setSettings(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:newVal}));}};},[]);// --- RENDER LOGIC ---\nif(timerState===WORKOUT_STATES.SETUP){return/*#__PURE__*/_jsxs(\"div\",{className:\"app setup-view\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Interval Timer Setup\"}),/*#__PURE__*/_jsx(FastInput,{label:\"Rounds (Press & Hold for Speed)\",value:settings.rounds,min:1,max:MAX_ROUNDS,increment:1,onChange:createSettingsSetter('rounds')}),/*#__PURE__*/_jsx(FastInput,{label:\"Work Time (Intervals of \".concat(WORK_INCREMENT,\"s)\"),value:settings.workTime,min:WORK_INCREMENT,max:MAX_TIME,increment:WORK_INCREMENT,onChange:createSettingsSetter('workTime')}),/*#__PURE__*/_jsx(FastInput,{label:\"Rest Time (Intervals of \".concat(REST_INCREMENT,\"s)\"),value:settings.restTime,min:REST_INCREMENT,max:MAX_TIME,increment:REST_INCREMENT,onChange:createSettingsSetter('restTime')}),/*#__PURE__*/_jsx(\"button\",{onClick:startWorkout,className:\"btn-start\",disabled:settings.rounds<1||settings.workTime<WORK_INCREMENT,children:\"Start Workout\"})]});}// Active Timer View (Same as before)\nconst phaseLabel={[WORKOUT_STATES.PREP]:'GET READY',[WORKOUT_STATES.WORK]:'WORK',[WORKOUT_STATES.REST]:'REST',[WORKOUT_STATES.COMPLETE]:'COMPLETE'}[timerState];const isComplete=timerState===WORKOUT_STATES.COMPLETE;const isPrep=timerState===WORKOUT_STATES.PREP;const isWorking=timerState===WORKOUT_STATES.WORK;return/*#__PURE__*/_jsxs(\"div\",{className:\"app timer-view \".concat(isWorking?'work-phase':'',\" \").concat(timerState===WORKOUT_STATES.REST?'rest-phase':'',\" \").concat(isComplete?'complete-phase':'',\" \").concat(isPrep?'prep-phase':''),children:[!isComplete&&/*#__PURE__*/_jsx(\"div\",{className:\"round-tracker\",children:isPrep?'PREP':\"ROUND \".concat(currentRound,\" OF \").concat(settings.rounds)}),/*#__PURE__*/_jsx(\"div\",{className:\"phase-label\",children:phaseLabel}),/*#__PURE__*/_jsx(\"div\",{className:\"main-timer\",children:isPrep?timeRemaining:formatTime(timeRemaining)}),isComplete&&/*#__PURE__*/_jsx(\"div\",{className:\"complete-message\",children:\"WORKOUT COMPLETE! \\uD83D\\uDCAA\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resetWorkout,className:\"btn-reset\",children:isComplete?'New Workout':'Stop / Reset'})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsx","_jsx","jsxs","_jsxs","MAX_ROUNDS","MAX_TIME","WORK_INCREMENT","REST_INCREMENT","PREP_TIME","HOLD_INTERVAL_MS","WORKOUT_STATES","SETUP","PREP","WORK","REST","COMPLETE","formatTime","seconds","minutes","Math","floor","secs","concat","String","padStart","playHighPitchedNoise","audio","Audio","volume","play","catch","e","console","error","FastInput","memo","_ref","label","value","max","increment","min","onChange","intervalRef","changeValue","direction","currentValue","newValue","applyChange","prevValue","handleMouseDown","current","clearInterval","nextValue","setInterval","handleMouseUp","className","children","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","disabled","App","settings","setSettings","rounds","workTime","restTime","timerState","setTimerState","timeRemaining","setTimeRemaining","currentRound","setCurrentRound","handleNextState","nextRound","prevTime","newTime","startWorkout","resetWorkout","createSettingsSetter","key","newVal","prev","_objectSpread","onClick","phaseLabel","isComplete","isPrep","isWorking"],"sources":["C:/Ashwin/Apps/gemini-workout/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport './index.css';\r\n\r\n// --- CONFIGURATION CONSTANTS ---\r\nconst MAX_ROUNDS = 15;\r\nconst MAX_TIME = 120;\r\nconst WORK_INCREMENT = 15;\r\nconst REST_INCREMENT = 5;\r\nconst PREP_TIME = 5;\r\nconst HOLD_INTERVAL_MS = 100; // Time between repeating increments (fast)\r\n\r\n// --- WORKOUT STATE ENUM ---\r\nconst WORKOUT_STATES = {\r\n    SETUP: 'SETUP',\r\n    PREP: 'PREP',\r\n    WORK: 'WORK',\r\n    REST: 'REST',\r\n    COMPLETE: 'COMPLETE'\r\n};\r\n\r\n// --- HELPER FUNCTIONS ---\r\n\r\nconst formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\r\n};\r\n\r\nconst playHighPitchedNoise = () => {\r\n    try {\r\n        const audio = new Audio('/chime.mp3'); \r\n        audio.volume = 0.8;\r\n        audio.play().catch(e => console.error(\"Audio playback error:\", e));\r\n    } catch (e) {\r\n        console.error(\"Browser audio API issue:\", e);\r\n    }\r\n};\r\n\r\n// --- FAST INPUT COMPONENT (Press-and-Hold - Stable Version) ---\r\nconst FastInput = React.memo(({ label, value, max, increment, min, onChange }) => {\r\n    const intervalRef = useRef(null);\r\n\r\n    const changeValue = useCallback((direction, currentValue) => {\r\n        let newValue;\r\n        if (direction === 'up') {\r\n            newValue = Math.min(currentValue + increment, max);\r\n        } else {\r\n            newValue = Math.max(currentValue - increment, min);\r\n        }\r\n        return newValue;\r\n    }, [increment, max, min]); \r\n    \r\n    const applyChange = useCallback((direction) => {\r\n        onChange(prevValue => {\r\n            return changeValue(direction, prevValue);\r\n        });\r\n    }, [onChange, changeValue]);\r\n\r\n    const handleMouseDown = (direction) => {\r\n        if (intervalRef.current) {\r\n            clearInterval(intervalRef.current);\r\n            intervalRef.current = null;\r\n        }\r\n\r\n        // 1. Apply the change once on the initial click\r\n        applyChange(direction);\r\n\r\n        // Check if we are stuck at a boundary after the first click\r\n        const nextValue = changeValue(direction, value);\r\n        if (nextValue === value) {\r\n            return;\r\n        }\r\n\r\n        // 2. Start repeating interval\r\n        intervalRef.current = setInterval(() => {\r\n            applyChange(direction);\r\n        }, HOLD_INTERVAL_MS);\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n        if (intervalRef.current) {\r\n            clearInterval(intervalRef.current);\r\n            intervalRef.current = null;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (intervalRef.current) {\r\n                clearInterval(intervalRef.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"input-group\">\r\n            <label className=\"input-label\">{label}</label>\r\n            <div className=\"input-controls\">\r\n                <button \r\n                    onMouseDown={() => handleMouseDown('down')} \r\n                    onMouseUp={handleMouseUp}\r\n                    onMouseLeave={handleMouseUp} \r\n                    onTouchStart={() => handleMouseDown('down')}\r\n                    onTouchEnd={handleMouseUp}\r\n                    className=\"control-btn minus\" \r\n                    disabled={value === min}\r\n                >\r\n                    -\r\n                </button>\r\n                <span className=\"input-value\">{value}</span>\r\n                <button \r\n                    onMouseDown={() => handleMouseDown('up')} \r\n                    onMouseUp={handleMouseUp}\r\n                    onMouseLeave={handleMouseUp}\r\n                    onTouchStart={() => handleMouseDown('up')}\r\n                    onTouchEnd={handleMouseUp}\r\n                    className=\"control-btn plus\" \r\n                    disabled={value === max}\r\n                >\r\n                    +\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n// --- MAIN APP COMPONENT ---\r\n\r\nfunction App() {\r\n    const [settings, setSettings] = useState({ rounds: 5, workTime: 60, restTime: 30 });\r\n    const [timerState, setTimerState] = useState(WORKOUT_STATES.SETUP);\r\n    const [timeRemaining, setTimeRemaining] = useState(0);\r\n    const [currentRound, setCurrentRound] = useState(1);\r\n    const intervalRef = useRef(null);\r\n\r\n    // Logic to handle state transitions\r\n    const handleNextState = useCallback(() => {\r\n        if (timerState === WORKOUT_STATES.PREP) {\r\n            setTimerState(WORKOUT_STATES.WORK);\r\n            setTimeRemaining(settings.workTime);\r\n\r\n        } else if (timerState === WORKOUT_STATES.WORK) {\r\n            if (currentRound < settings.rounds) {\r\n                setTimerState(WORKOUT_STATES.REST);\r\n                setTimeRemaining(settings.restTime);\r\n            } else {\r\n                setTimerState(WORKOUT_STATES.COMPLETE);\r\n            }\r\n\r\n        } else if (timerState === WORKOUT_STATES.REST) {\r\n            const nextRound = currentRound + 1;\r\n            setCurrentRound(nextRound);\r\n\r\n            if (nextRound <= settings.rounds) {\r\n                setTimerState(WORKOUT_STATES.WORK);\r\n                setTimeRemaining(settings.workTime);\r\n            } else {\r\n                setTimerState(WORKOUT_STATES.COMPLETE);\r\n            }\r\n        }\r\n    }, [timerState, settings, currentRound]);\r\n\r\n    // The main timer loop\r\n    useEffect(() => {\r\n        if (timerState === WORKOUT_STATES.SETUP || timerState === WORKOUT_STATES.COMPLETE) {\r\n            return () => clearInterval(intervalRef.current);\r\n        }\r\n\r\n        intervalRef.current = setInterval(() => {\r\n            setTimeRemaining(prevTime => {\r\n                const newTime = prevTime - 1;\r\n\r\n                if (newTime >= 0 && newTime <= 3) {\r\n                    playHighPitchedNoise();\r\n                }\r\n\r\n                if (newTime < 0) {\r\n                    clearInterval(intervalRef.current);\r\n                    handleNextState();\r\n                    return 0;\r\n                }\r\n\r\n                return newTime;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [timerState, settings, currentRound, handleNextState]);\r\n\r\n    const startWorkout = () => {\r\n        clearInterval(intervalRef.current);\r\n        if (settings.rounds > 0 && settings.workTime > 0) {\r\n            setTimerState(WORKOUT_STATES.PREP);\r\n            setTimeRemaining(PREP_TIME);\r\n            setCurrentRound(1);\r\n        }\r\n    };\r\n\r\n    const resetWorkout = () => {\r\n        clearInterval(intervalRef.current);\r\n        setTimerState(WORKOUT_STATES.SETUP);\r\n        setTimeRemaining(0);\r\n        setCurrentRound(1);\r\n    };\r\n    \r\n    const createSettingsSetter = useCallback((key) => {\r\n        return (newVal) => {\r\n            if (typeof newVal === 'function') {\r\n                setSettings(prev => ({...prev, [key]: newVal(prev[key])}));\r\n            } else {\r\n                setSettings(prev => ({...prev, [key]: newVal}));\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // --- RENDER LOGIC ---\r\n    if (timerState === WORKOUT_STATES.SETUP) {\r\n        return (\r\n            <div className=\"app setup-view\">\r\n                <h1 className=\"title\">Interval Timer Setup</h1>\r\n                \r\n                {/* Reverting to the highly stable FastInput component */}\r\n                <FastInput \r\n                    label=\"Rounds (Press & Hold for Speed)\"\r\n                    value={settings.rounds}\r\n                    min={1} \r\n                    max={MAX_ROUNDS}\r\n                    increment={1}\r\n                    onChange={createSettingsSetter('rounds')}\r\n                />\r\n                <FastInput \r\n                    label={`Work Time (Intervals of ${WORK_INCREMENT}s)`}\r\n                    value={settings.workTime}\r\n                    min={WORK_INCREMENT} \r\n                    max={MAX_TIME}\r\n                    increment={WORK_INCREMENT}\r\n                    onChange={createSettingsSetter('workTime')}\r\n                />\r\n                <FastInput \r\n                    label={`Rest Time (Intervals of ${REST_INCREMENT}s)`}\r\n                    value={settings.restTime}\r\n                    min={REST_INCREMENT} \r\n                    max={MAX_TIME}\r\n                    increment={REST_INCREMENT}\r\n                    onChange={createSettingsSetter('restTime')}\r\n                />\r\n                \r\n                <button \r\n                    onClick={startWorkout} \r\n                    className=\"btn-start\"\r\n                    disabled={settings.rounds < 1 || settings.workTime < WORK_INCREMENT}\r\n                >\r\n                    Start Workout\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Active Timer View (Same as before)\r\n    const phaseLabel = {\r\n        [WORKOUT_STATES.PREP]: 'GET READY',\r\n        [WORKOUT_STATES.WORK]: 'WORK',\r\n        [WORKOUT_STATES.REST]: 'REST',\r\n        [WORKOUT_STATES.COMPLETE]: 'COMPLETE'\r\n    }[timerState];\r\n\r\n    const isComplete = timerState === WORKOUT_STATES.COMPLETE;\r\n    const isPrep = timerState === WORKOUT_STATES.PREP;\r\n    const isWorking = timerState === WORKOUT_STATES.WORK;\r\n\r\n    return (\r\n        <div className={`app timer-view ${isWorking ? 'work-phase' : ''} ${timerState === WORKOUT_STATES.REST ? 'rest-phase' : ''} ${isComplete ? 'complete-phase' : ''} ${isPrep ? 'prep-phase' : ''}`}>\r\n            \r\n            {!isComplete && (\r\n                <div className=\"round-tracker\">\r\n                    {isPrep ? 'PREP' : `ROUND ${currentRound} OF ${settings.rounds}`}\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"phase-label\">{phaseLabel}</div>\r\n\r\n            <div className=\"main-timer\">\r\n                {isPrep ? timeRemaining : formatTime(timeRemaining)}\r\n            </div>\r\n            \r\n            {isComplete && (\r\n                <div className=\"complete-message\">\r\n                    WORKOUT COMPLETE! 💪\r\n                </div>\r\n            )}\r\n\r\n            <button onClick={resetWorkout} className=\"btn-reset\">\r\n                {isComplete ? 'New Workout' : 'Stop / Reset'}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}